
% Generate a sample EEG signal
Fs = 1000; % Sampling frequency (Hz)
t = 0:1/Fs:10; % Time vector (10 seconds)
eeg_signal = sin(2*pi*10*t) + 0.5*sin(2*pi*20*t) + 0.2*sin(2*pi*5*t); % Sample EEG signal with frequencies 10 Hz, 20 Hz, and 5 Hz

% Frequency binning parameters
alpha_band = [8, 12]; % Alpha band frequencies (Hz)
beta_band = [13, 30]; % Beta band frequencies (Hz)
theta_band = [4, 7]; % Theta band frequencies (Hz)

% Prepare short 1-second frames of EEG signal
frame_length = Fs; % 1-second frame
num_frames = floor(length(eeg_signal) / frame_length);
frames = reshape(eeg_signal(1:num_frames*frame_length), frame_length, num_frames);

% Compute power spectrum and extract frequency bands for each frame
alpha_power = zeros(1, num_frames);
beta_power = zeros(1, num_frames);
theta_power = zeros(1, num_frames);

for i = 1:num_frames
    % Apply FFT to the frame
    frame_fft = fft(frames(:, i));

    % Compute power spectrum
    power_spectrum = abs(frame_fft).^2;

    % Extract frequency bins
    freqs = (0:frame_length-1) * Fs / frame_length;

    % Find indices corresponding to alpha, beta, and theta bands
    alpha_indices = find(freqs >= alpha_band(1) & freqs <= alpha_band(2));
    beta_indices = find(freqs >= beta_band(1) & freqs <= beta_band(2));
    theta_indices = find(freqs >= theta_band(1) & freqs <= theta_band(2));

    % Compute power in alpha, beta, and theta bands
    alpha_power(i) = sum(power_spectrum(alpha_indices));
    beta_power(i) = sum(power_spectrum(beta_indices));
    theta_power(i) = sum(power_spectrum(theta_indices));
end

% Plot the power in each frequency band over time
time = (1:num_frames) * (frame_length / Fs);
figure;
plot(time, alpha_power, 'r', 'LineWidth', 2);
hold on;
plot(time, beta_power, 'g', 'LineWidth', 2);
plot(time, theta_power, 'b', 'LineWidth', 2);
xlabel('Time (s)');
ylabel('Power');
title('Power in Alpha, Beta, and Theta Bands');
legend('Alpha', 'Beta', 'Theta');
grid on;

% Now let's calculate and plot the FFT of the Alpha, Beta, and Theta bands from the generated EEG signal
% Filter the EEG signal for alpha, beta, and theta bands
alpha_signal = zeros(size(eeg_signal));
beta_signal = zeros(size(eeg_signal));
theta_signal = zeros(size(eeg_signal));

for i = 1:num_frames
    % Extract the current frame
    frame = frames(:, i);
    
    % Apply bandpass filters to extract alpha, beta, and theta signals
    % Alpha band (8-12 Hz)
    alpha_signal((i-1)*frame_length + 1:i*frame_length) = bandpass(frame, alpha_band, Fs);
    
    % Beta band (13-30 Hz)
    beta_signal((i-1)*frame_length + 1:i*frame_length) = bandpass(frame, beta_band, Fs);
    
    % Theta band (4-7 Hz)
    theta_signal((i-1)*frame_length + 1:i*frame_length) = bandpass(frame, theta_band, Fs);
end

% Compute the FFT of the filtered signals
alpha_fft = fft(alpha_signal);
beta_fft = fft(beta_signal);
theta_fft = fft(theta_signal);

% Compute the frequency axis for the entire signal
N = length(eeg_signal); % Length of the full EEG signal
freqs = (0:N-1) * Fs / N; % Frequency axis

% Plot the FFT of alpha, beta, and theta signals
figure;
subplot(3, 1, 1);
plot(freqs, abs(alpha_fft));
title('FFT of Alpha Band (8-12 Hz)');
xlabel('Frequency (Hz)');
ylabel('Magnitude');
xlim([0 Fs/2]); % Limit x-axis to half the sampling frequency (Nyquist limit)

subplot(3, 1, 2);
plot(freqs, abs(beta_fft));
title('FFT of Beta Band (13-30 Hz)');
xlabel('Frequency (Hz)');
ylabel('Magnitude');
xlim([0 Fs/2]); % Limit x-axis to half the sampling frequency (Nyquist limit)

subplot(3, 1, 3);
plot(freqs, abs(theta_fft));
title('FFT of Theta Band (4-7 Hz)');
xlabel('Frequency (Hz)');
ylabel('Magnitude');
xlim([0 Fs/2]); % Limit x-axis to half the sampling frequency (Nyquist limit)

%If EEG csv file as input is given ,
% Read EEG signal from CSV file
eeg_data = csvread('C:\Users\student.SSPU\Downloads\Eeg_signal.csv'); % Assuming the CSV file contains one column representing the EEG signal

% Parameters
Fs = 1000; % Sampling frequency (Hz)
frame_length = Fs; % 1-second frame

% Frequency binning parameters
alpha_band = [8, 12]; % Alpha band frequencies (Hz)
beta_band = [13, 30]; % Beta band frequencies (Hz)
theta_band = [4, 7]; % Theta band frequencies (Hz)

% Prepare short 1-second frames of EEG signal
num_frames = floor(length(eeg_data) / frame_length);
frames = reshape(eeg_data(1:num_frames*frame_length), frame_length, num_frames);

% Compute power spectrum and extract frequency bands for each frame
alpha_power = zeros(1, num_frames);
beta_power = zeros(1, num_frames);
theta_power = zeros(1, num_frames);

for i = 1:num_frames
% Apply FFT to the frame
frame_fft = fft(frames(:, i));

% Compute power spectrum
power_spectrum = abs(frame_fft).^2;

% Extract frequency bins

freqs = (0:frame_length-1) * Fs / frame_length;

% Find indices corresponding to alpha, beta, and theta bands
alpha_indices = find(freqs >= alpha_band(1) & freqs <= alpha_band(2));
beta_indices = find(freqs >= beta_band(1) & freqs <= beta_band(2));
theta_indices = find(freqs >= theta_band(1) & freqs <= theta_band(2));

% Compute power in alpha, beta, and theta bands
alpha_power(i) = sum(power_spectrum(alpha_indices));
beta_power(i) = sum(power_spectrum(beta_indices));
theta_power(i) = sum(power_spectrum(theta_indices));
end

% Plot the power in each frequency band over time
time = (1:num_frames) * (frame_length / Fs);
figure;
plot(time, alpha_power, 'r', 'LineWidth', 2);
hold on;
plot(time, beta_power, 'g', 'LineWidth', 2);
plot(time, theta_power, 'b', 'LineWidth', 2);
xlabel('Time (s)');
ylabel('Power');
title('Power in Alpha, Beta, and Theta Bands');
legend('Alpha', 'Beta', 'Theta');
grid on;

% Read EEG signal from CSV file
eeg_data = readtable('C:\Users\student.SSPU\Downloads\yash.csv');
% Assuming the CSV file contains columns representing the EEG signals

% Display variable names to check modifications
disp(eeg_data.Properties.VariableNames);

% Convert table to array by selecting the relevant columns
eeg_signals = eeg_data{:, 2:end}; % Adjust indices as necessary

% Parameters
Fs = 1000; % Sampling frequency (Hz)
frame_length = Fs; % 1-second frame

% Frequency binning parameters
alpha_band = [8, 12]; % Alpha band frequencies (Hz)
beta_band = [13, 30]; % Beta band frequencies (Hz)
theta_band = [4, 7]; % Theta band frequencies (Hz)

% Initialize power arrays
alpha_power = [];
beta_power = [];
theta_power = [];
signal_names = eeg_data.Properties.VariableNames(2:end);

for j = 1:size(eeg_signals, 2)
    signal = eeg_signals(:, j);
    
    % Prepare short 1-second frames of EEG signal
    num_frames = floor(length(signal) / frame_length);
    frames = reshape(signal(1:num_frames*frame_length), frame_length, num_frames);

    % Compute power spectrum and extract frequency bands for each frame
    alpha_power = [alpha_power; zeros(1, num_frames)];
    beta_power = [beta_power; zeros(1, num_frames)];
    theta_power = [theta_power; zeros(1, num_frames)];

    for i = 1:num_frames
        % Apply FFT to the frame
        frame_fft = fft(frames(:, i));

        % Compute power spectrum
        power_spectrum = abs(frame_fft).^2;

        % Extract frequency bins
        freqs = (0:frame_length-1) * Fs / frame_length;

        % Find indices corresponding to alpha, beta, and theta bands
        alpha_indices = find(freqs >= alpha_band(1) & freqs <= alpha_band(2));
        beta_indices = find(freqs >= beta_band(1) & freqs <= beta_band(2));
        theta_indices = find(freqs >= theta_band(1) & freqs <= theta_band(2));

        % Compute power in alpha, beta, and theta bands
        alpha_power(j, i) = sum(power_spectrum(alpha_indices));
        beta_power(j, i) = sum(power_spectrum(beta_indices));
        theta_power(j, i) = sum(power_spectrum(theta_indices));
    end
end

% Plot the power in each frequency band over time for each signal
time = (1:num_frames) * (frame_length / Fs);

for j = 1:size(eeg_signals, 2)
    figure;
    plot(time, alpha_power(j, :), 'r', 'LineWidth', 2);
    hold on;
    plot(time, beta_power(j, :), 'g', 'LineWidth', 2);
    plot(time, theta_power(j, :), 'b', 'LineWidth', 2);
    xlabel('Time (s)');
    ylabel('Power');
    title(['Power in Alpha, Beta, and Theta Bands for ', signal_names{j}]);
    legend('Alpha', 'Beta', 'Theta');
    grid on;
end



